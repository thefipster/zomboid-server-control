@page "/"
@using TheFipster.Zomboid.ServerControl.Components;
@using TheFipster.Zomboid.ServerControl.Models;
@using TheFipster.Zomboid.ServerControl.Services;


@inject IJSRuntime JsRuntime
@inject ServerConfigService ServerConfig
@inject DockerInteropService DockerInterop

<div class="fip-sidebar">
    <ModForm OnModAdded="addModAsync" />
    <ServerControls OnRestartConfirmed="restartConfirmedAsync" />
</div>
<ModList @ref="modlist" />
<LogList @ref="loglist" />

@code
{
    ModList? modlist;
    LogList? loglist;

    private async Task addModAsync(ModConfig mod)
    {
        if (modlist == null)
            return;

        await modlist.AddModAsync(mod);
    }

    private async Task restartConfirmedAsync()
    {
        if (modlist == null || loglist == null)
            return;

        await JsRuntime.InvokeVoidAsync("interop.showLogs");
        ServerConfig.SetMods(new ModCollection(modlist.Mods));
        await DockerInterop.RestartAsync();
        loglist.Start();
    }
}
