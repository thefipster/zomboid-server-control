@page "/"

@using System.Timers
@using Docker.DotNet.Models;
@using TheFipster.Zomboid.ServerControl.Data
@using TheFipster.Zomboid.ServerControl.Components

@inject IJSRuntime JsRuntime
@inject ServerConfigService ServerConfig
@inject DockerInteropService DockerInterop

<PageTitle>Zomboid Mod Loader</PageTitle>

<div class="fip-content">
    <div class="fip-layer">
        <PageHeadline />
        <div class="fip-container">
            <div class="fip-sidebar">
                <ModForm OnModAdded="addMod" />
                <ServerControls OnRestartConfirmed="restartConfirmedAsync" />
            </div>
            <ModList @ref="modlist" />
            <LogList @ref="loglist" />
        </div>
    </div>
</div>

@code
{
    ModList? modlist;
    LogList? loglist;

    private Task addMod(ModConfig mod)
    {
        if (modlist == null)
            return Task.CompletedTask;

        modlist.AddMod(mod);
        return Task.CompletedTask;
    }

    private async Task restartConfirmedAsync()
    {
        if (modlist == null || loglist == null)
            return;

        await JsRuntime.InvokeVoidAsync("interop.showLogs");
        ServerConfig.SetMods(new ModCollection(modlist.Mods));
        await DockerInterop.RestartAsync();
        loglist.Start();
    }
}
